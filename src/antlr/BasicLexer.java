// Generated from ./BasicLexer.g4 by ANTLR 4.1

package antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BasicLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		EQUALS=1, SKIP=2, READ=3, FREE=4, RETURN=5, EXIT=6, PRINT=7, PRINTLN=8, 
		IF=9, THEN=10, ELSE=11, ENDIF=12, FOR=13, WHILE=14, DO=15, DONE=16, BEGIN=17, 
		END=18, IS=19, SEMICOLON=20, NEWPAIR=21, CALL=22, FIRST=23, SECOND=24, 
		INT=25, BOOL=26, CHAR=27, STRING=28, PAIR=29, NOT=30, LENGTH=31, ORD=32, 
		TO_INT=33, MULTIPLY=34, DIVIDE=35, MOD=36, PLUS=37, MINUS=38, GREATER=39, 
		GREATER_EQUAL=40, LESS=41, LESS_EQUAL=42, EQUAL=43, NOT_EQUAL=44, AND=45, 
		OR=46, UNDERSCORE=47, TRUE=48, FALSE=49, DOUBLE_QUOTE=50, SINGLE_QUOTE=51, 
		BACKSLASH=52, ESCAPED_CHAR=53, OPEN_BRACKET=54, CLOSE_BRACKET=55, COMMA=56, 
		NULL=57, OPEN_PARENTHESES=58, CLOSE_PARENTHESES=59, INTEGER=60, IDENT=61, 
		WHITESPACE=62, COMMENT=63, EVERYTHING=64;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'='", "'skip'", "'read'", "'free'", "'return'", "'exit'", "'print'", 
		"'println'", "'if'", "'then'", "'else'", "'fi'", "'for'", "'while'", "'do'", 
		"'done'", "'begin'", "'end'", "'is'", "';'", "'newpair'", "'call'", "'fst'", 
		"'snd'", "'int'", "'bool'", "'char'", "'string'", "'pair'", "'!'", "'len'", 
		"'ord'", "'toInt'", "'*'", "'/'", "'%'", "'+'", "'-'", "'>'", "'>='", 
		"'<'", "'<='", "'=='", "'!='", "'&&'", "'||'", "'_'", "'true'", "'false'", 
		"'\"'", "'''", "'\\'", "ESCAPED_CHAR", "'['", "']'", "','", "'null'", 
		"'('", "')'", "INTEGER", "IDENT", "WHITESPACE", "COMMENT", "EVERYTHING"
	};
	public static final String[] ruleNames = {
		"EQUALS", "SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", 
		"IF", "THEN", "ELSE", "ENDIF", "FOR", "WHILE", "DO", "DONE", "BEGIN", 
		"END", "IS", "SEMICOLON", "NEWPAIR", "CALL", "FIRST", "SECOND", "INT", 
		"BOOL", "CHAR", "STRING", "PAIR", "NOT", "LENGTH", "ORD", "TO_INT", "MULTIPLY", 
		"DIVIDE", "MOD", "PLUS", "MINUS", "GREATER", "GREATER_EQUAL", "LESS", 
		"LESS_EQUAL", "EQUAL", "NOT_EQUAL", "AND", "OR", "UNDERSCORE", "TRUE", 
		"FALSE", "NUL", "BACKSPACE", "TAB", "FORM_FEED", "NEWLINE", "CARRIAGE_RETURN", 
		"DOUBLE_QUOTE", "SINGLE_QUOTE", "BACKSLASH", "ESCAPED_CHAR", "OPEN_BRACKET", 
		"CLOSE_BRACKET", "COMMA", "NULL", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", 
		"DIGIT", "LOWERCASE", "UPPERCASE", "INTEGER", "IDENT", "WHITESPACE", "COMMENT", 
		"EVERYTHING"
	};


	public BasicLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BasicLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 70: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;

		case 71: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2B\u01b4\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5"+
		"\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3"+
		"\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\""+
		"\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3+\3"+
		"+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66"+
		"\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3<\3<\3<\3<\3<\3<\3<\5<"+
		"\u0179\n<\3=\3=\3>\3>\3?\3?\3@\3@\3@\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E"+
		"\3E\3F\6F\u0191\nF\rF\16F\u0192\3G\3G\3G\5G\u0198\nG\3G\3G\3G\3G\7G\u019e"+
		"\nG\fG\16G\u01a1\13G\3H\6H\u01a4\nH\rH\16H\u01a5\3H\3H\3I\3I\7I\u01ac"+
		"\nI\fI\16I\u01af\13I\3I\3I\3J\3J\2K\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b"+
		"\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1"+
		"!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34"+
		"\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S"+
		"+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63\1e\2\1g\2\1i\2\1k\2\1m\2\1o"+
		"\2\1q\64\1s\65\1u\66\1w\67\1y8\1{9\1}:\1\177;\1\u0081<\1\u0083=\1\u0085"+
		"\2\1\u0087\2\1\u0089\2\1\u008b>\1\u008d?\1\u008f@\2\u0091A\3\u0093B\1"+
		"\3\2\4\5\2\13\f\17\17\"\"\4\2\f\f\17\17\u01ba\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2q\3\2"+
		"\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2"+
		"\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u008b\3\2\2\2\2\u008d"+
		"\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\3\u0095\3\2\2"+
		"\2\5\u0097\3\2\2\2\7\u009c\3\2\2\2\t\u00a1\3\2\2\2\13\u00a6\3\2\2\2\r"+
		"\u00ad\3\2\2\2\17\u00b2\3\2\2\2\21\u00b8\3\2\2\2\23\u00c0\3\2\2\2\25\u00c3"+
		"\3\2\2\2\27\u00c8\3\2\2\2\31\u00cd\3\2\2\2\33\u00d0\3\2\2\2\35\u00d4\3"+
		"\2\2\2\37\u00da\3\2\2\2!\u00dd\3\2\2\2#\u00e2\3\2\2\2%\u00e8\3\2\2\2\'"+
		"\u00ec\3\2\2\2)\u00ef\3\2\2\2+\u00f1\3\2\2\2-\u00f9\3\2\2\2/\u00fe\3\2"+
		"\2\2\61\u0102\3\2\2\2\63\u0106\3\2\2\2\65\u010a\3\2\2\2\67\u010f\3\2\2"+
		"\29\u0114\3\2\2\2;\u011b\3\2\2\2=\u0120\3\2\2\2?\u0122\3\2\2\2A\u0126"+
		"\3\2\2\2C\u012a\3\2\2\2E\u0130\3\2\2\2G\u0132\3\2\2\2I\u0134\3\2\2\2K"+
		"\u0136\3\2\2\2M\u0138\3\2\2\2O\u013a\3\2\2\2Q\u013c\3\2\2\2S\u013f\3\2"+
		"\2\2U\u0141\3\2\2\2W\u0144\3\2\2\2Y\u0147\3\2\2\2[\u014a\3\2\2\2]\u014d"+
		"\3\2\2\2_\u0150\3\2\2\2a\u0152\3\2\2\2c\u0157\3\2\2\2e\u015d\3\2\2\2g"+
		"\u015f\3\2\2\2i\u0161\3\2\2\2k\u0163\3\2\2\2m\u0165\3\2\2\2o\u0167\3\2"+
		"\2\2q\u0169\3\2\2\2s\u016b\3\2\2\2u\u016d\3\2\2\2w\u016f\3\2\2\2y\u017a"+
		"\3\2\2\2{\u017c\3\2\2\2}\u017e\3\2\2\2\177\u0180\3\2\2\2\u0081\u0185\3"+
		"\2\2\2\u0083\u0187\3\2\2\2\u0085\u0189\3\2\2\2\u0087\u018b\3\2\2\2\u0089"+
		"\u018d\3\2\2\2\u008b\u0190\3\2\2\2\u008d\u0197\3\2\2\2\u008f\u01a3\3\2"+
		"\2\2\u0091\u01a9\3\2\2\2\u0093\u01b2\3\2\2\2\u0095\u0096\7?\2\2\u0096"+
		"\4\3\2\2\2\u0097\u0098\7u\2\2\u0098\u0099\7m\2\2\u0099\u009a\7k\2\2\u009a"+
		"\u009b\7r\2\2\u009b\6\3\2\2\2\u009c\u009d\7t\2\2\u009d\u009e\7g\2\2\u009e"+
		"\u009f\7c\2\2\u009f\u00a0\7f\2\2\u00a0\b\3\2\2\2\u00a1\u00a2\7h\2\2\u00a2"+
		"\u00a3\7t\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5\7g\2\2\u00a5\n\3\2\2\2\u00a6"+
		"\u00a7\7t\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7v\2\2\u00a9\u00aa\7w\2\2"+
		"\u00aa\u00ab\7t\2\2\u00ab\u00ac\7p\2\2\u00ac\f\3\2\2\2\u00ad\u00ae\7g"+
		"\2\2\u00ae\u00af\7z\2\2\u00af\u00b0\7k\2\2\u00b0\u00b1\7v\2\2\u00b1\16"+
		"\3\2\2\2\u00b2\u00b3\7r\2\2\u00b3\u00b4\7t\2\2\u00b4\u00b5\7k\2\2\u00b5"+
		"\u00b6\7p\2\2\u00b6\u00b7\7v\2\2\u00b7\20\3\2\2\2\u00b8\u00b9\7r\2\2\u00b9"+
		"\u00ba\7t\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7v\2\2"+
		"\u00bd\u00be\7n\2\2\u00be\u00bf\7p\2\2\u00bf\22\3\2\2\2\u00c0\u00c1\7"+
		"k\2\2\u00c1\u00c2\7h\2\2\u00c2\24\3\2\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5"+
		"\7j\2\2\u00c5\u00c6\7g\2\2\u00c6\u00c7\7p\2\2\u00c7\26\3\2\2\2\u00c8\u00c9"+
		"\7g\2\2\u00c9\u00ca\7n\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7g\2\2\u00cc"+
		"\30\3\2\2\2\u00cd\u00ce\7h\2\2\u00ce\u00cf\7k\2\2\u00cf\32\3\2\2\2\u00d0"+
		"\u00d1\7h\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7t\2\2\u00d3\34\3\2\2\2\u00d4"+
		"\u00d5\7y\2\2\u00d5\u00d6\7j\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7n\2\2"+
		"\u00d8\u00d9\7g\2\2\u00d9\36\3\2\2\2\u00da\u00db\7f\2\2\u00db\u00dc\7"+
		"q\2\2\u00dc \3\2\2\2\u00dd\u00de\7f\2\2\u00de\u00df\7q\2\2\u00df\u00e0"+
		"\7p\2\2\u00e0\u00e1\7g\2\2\u00e1\"\3\2\2\2\u00e2\u00e3\7d\2\2\u00e3\u00e4"+
		"\7g\2\2\u00e4\u00e5\7i\2\2\u00e5\u00e6\7k\2\2\u00e6\u00e7\7p\2\2\u00e7"+
		"$\3\2\2\2\u00e8\u00e9\7g\2\2\u00e9\u00ea\7p\2\2\u00ea\u00eb\7f\2\2\u00eb"+
		"&\3\2\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee\7u\2\2\u00ee(\3\2\2\2\u00ef\u00f0"+
		"\7=\2\2\u00f0*\3\2\2\2\u00f1\u00f2\7p\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4"+
		"\7y\2\2\u00f4\u00f5\7r\2\2\u00f5\u00f6\7c\2\2\u00f6\u00f7\7k\2\2\u00f7"+
		"\u00f8\7t\2\2\u00f8,\3\2\2\2\u00f9\u00fa\7e\2\2\u00fa\u00fb\7c\2\2\u00fb"+
		"\u00fc\7n\2\2\u00fc\u00fd\7n\2\2\u00fd.\3\2\2\2\u00fe\u00ff\7h\2\2\u00ff"+
		"\u0100\7u\2\2\u0100\u0101\7v\2\2\u0101\60\3\2\2\2\u0102\u0103\7u\2\2\u0103"+
		"\u0104\7p\2\2\u0104\u0105\7f\2\2\u0105\62\3\2\2\2\u0106\u0107\7k\2\2\u0107"+
		"\u0108\7p\2\2\u0108\u0109\7v\2\2\u0109\64\3\2\2\2\u010a\u010b\7d\2\2\u010b"+
		"\u010c\7q\2\2\u010c\u010d\7q\2\2\u010d\u010e\7n\2\2\u010e\66\3\2\2\2\u010f"+
		"\u0110\7e\2\2\u0110\u0111\7j\2\2\u0111\u0112\7c\2\2\u0112\u0113\7t\2\2"+
		"\u01138\3\2\2\2\u0114\u0115\7u\2\2\u0115\u0116\7v\2\2\u0116\u0117\7t\2"+
		"\2\u0117\u0118\7k\2\2\u0118\u0119\7p\2\2\u0119\u011a\7i\2\2\u011a:\3\2"+
		"\2\2\u011b\u011c\7r\2\2\u011c\u011d\7c\2\2\u011d\u011e\7k\2\2\u011e\u011f"+
		"\7t\2\2\u011f<\3\2\2\2\u0120\u0121\7#\2\2\u0121>\3\2\2\2\u0122\u0123\7"+
		"n\2\2\u0123\u0124\7g\2\2\u0124\u0125\7p\2\2\u0125@\3\2\2\2\u0126\u0127"+
		"\7q\2\2\u0127\u0128\7t\2\2\u0128\u0129\7f\2\2\u0129B\3\2\2\2\u012a\u012b"+
		"\7v\2\2\u012b\u012c\7q\2\2\u012c\u012d\7K\2\2\u012d\u012e\7p\2\2\u012e"+
		"\u012f\7v\2\2\u012fD\3\2\2\2\u0130\u0131\7,\2\2\u0131F\3\2\2\2\u0132\u0133"+
		"\7\61\2\2\u0133H\3\2\2\2\u0134\u0135\7\'\2\2\u0135J\3\2\2\2\u0136\u0137"+
		"\7-\2\2\u0137L\3\2\2\2\u0138\u0139\7/\2\2\u0139N\3\2\2\2\u013a\u013b\7"+
		"@\2\2\u013bP\3\2\2\2\u013c\u013d\7@\2\2\u013d\u013e\7?\2\2\u013eR\3\2"+
		"\2\2\u013f\u0140\7>\2\2\u0140T\3\2\2\2\u0141\u0142\7>\2\2\u0142\u0143"+
		"\7?\2\2\u0143V\3\2\2\2\u0144\u0145\7?\2\2\u0145\u0146\7?\2\2\u0146X\3"+
		"\2\2\2\u0147\u0148\7#\2\2\u0148\u0149\7?\2\2\u0149Z\3\2\2\2\u014a\u014b"+
		"\7(\2\2\u014b\u014c\7(\2\2\u014c\\\3\2\2\2\u014d\u014e\7~\2\2\u014e\u014f"+
		"\7~\2\2\u014f^\3\2\2\2\u0150\u0151\7a\2\2\u0151`\3\2\2\2\u0152\u0153\7"+
		"v\2\2\u0153\u0154\7t\2\2\u0154\u0155\7w\2\2\u0155\u0156\7g\2\2\u0156b"+
		"\3\2\2\2\u0157\u0158\7h\2\2\u0158\u0159\7c\2\2\u0159\u015a\7n\2\2\u015a"+
		"\u015b\7u\2\2\u015b\u015c\7g\2\2\u015cd\3\2\2\2\u015d\u015e\7\62\2\2\u015e"+
		"f\3\2\2\2\u015f\u0160\7d\2\2\u0160h\3\2\2\2\u0161\u0162\7v\2\2\u0162j"+
		"\3\2\2\2\u0163\u0164\7h\2\2\u0164l\3\2\2\2\u0165\u0166\7p\2\2\u0166n\3"+
		"\2\2\2\u0167\u0168\7t\2\2\u0168p\3\2\2\2\u0169\u016a\7$\2\2\u016ar\3\2"+
		"\2\2\u016b\u016c\7)\2\2\u016ct\3\2\2\2\u016d\u016e\7^\2\2\u016ev\3\2\2"+
		"\2\u016f\u0178\5u;\2\u0170\u0179\5e\63\2\u0171\u0179\5g\64\2\u0172\u0179"+
		"\5i\65\2\u0173\u0179\5k\66\2\u0174\u0179\5o8\2\u0175\u0179\5s:\2\u0176"+
		"\u0179\5q9\2\u0177\u0179\5u;\2\u0178\u0170\3\2\2\2\u0178\u0171\3\2\2\2"+
		"\u0178\u0172\3\2\2\2\u0178\u0173\3\2\2\2\u0178\u0174\3\2\2\2\u0178\u0175"+
		"\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0177\3\2\2\2\u0179x\3\2\2\2\u017a"+
		"\u017b\7]\2\2\u017bz\3\2\2\2\u017c\u017d\7_\2\2\u017d|\3\2\2\2\u017e\u017f"+
		"\7.\2\2\u017f~\3\2\2\2\u0180\u0181\7p\2\2\u0181\u0182\7w\2\2\u0182\u0183"+
		"\7n\2\2\u0183\u0184\7n\2\2\u0184\u0080\3\2\2\2\u0185\u0186\7*\2\2\u0186"+
		"\u0082\3\2\2\2\u0187\u0188\7+\2\2\u0188\u0084\3\2\2\2\u0189\u018a\4\62"+
		";\2\u018a\u0086\3\2\2\2\u018b\u018c\4c|\2\u018c\u0088\3\2\2\2\u018d\u018e"+
		"\4C\\\2\u018e\u008a\3\2\2\2\u018f\u0191\5\u0085C\2\u0190\u018f\3\2\2\2"+
		"\u0191\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u008c"+
		"\3\2\2\2\u0194\u0198\5_\60\2\u0195\u0198\5\u0087D\2\u0196\u0198\5\u0089"+
		"E\2\u0197\u0194\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0196\3\2\2\2\u0198"+
		"\u019f\3\2\2\2\u0199\u019e\5_\60\2\u019a\u019e\5\u0087D\2\u019b\u019e"+
		"\5\u0089E\2\u019c\u019e\5\u0085C\2\u019d\u0199\3\2\2\2\u019d\u019a\3\2"+
		"\2\2\u019d\u019b\3\2\2\2\u019d\u019c\3\2\2\2\u019e\u01a1\3\2\2\2\u019f"+
		"\u019d\3\2\2\2\u019f\u01a0\3\2\2\2\u01a0\u008e\3\2\2\2\u01a1\u019f\3\2"+
		"\2\2\u01a2\u01a4\t\2\2\2\u01a3\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5"+
		"\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a8\bH"+
		"\2\2\u01a8\u0090\3\2\2\2\u01a9\u01ad\7%\2\2\u01aa\u01ac\n\3\2\2\u01ab"+
		"\u01aa\3\2\2\2\u01ac\u01af\3\2\2\2\u01ad\u01ab\3\2\2\2\u01ad\u01ae\3\2"+
		"\2\2\u01ae\u01b0\3\2\2\2\u01af\u01ad\3\2\2\2\u01b0\u01b1\bI\3\2\u01b1"+
		"\u0092\3\2\2\2\u01b2\u01b3\n\3\2\2\u01b3\u0094\3\2\2\2\n\2\u0178\u0192"+
		"\u0197\u019d\u019f\u01a5\u01ad";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}